syntax = "proto3";

package api.users;
option go_package = "github.com/p4nuta/coursework-grpc-golang/gen/go/user_service/v1";

import "proto/protoc-gen-validate/validate/validate.proto";
import "proto/google/api/annotations.proto";

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option(google.api.http) = {
      post: "/v1/get/user"
      body: "*"
    };
  }
  rpc PutUser(PutUserRequest) returns (PutUserResponse) {
    option(google.api.http) = {
      post: "/v1/put/user"
      body: "*"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option(google.api.http) = {
      post: "/v1/delete/user"
      body: "*"
    };
  }
}

message GetUserRequest {
  int64 user_id = 1 [(proto.protoc_gen_validate.validate.rules).int64.gt = 0];
}

message GetUserResponse {
  message User {
    int64 id = 1 [(proto.protoc_gen_validate.validate.rules).int64.gt = 0];
    string email = 2 [(proto.protoc_gen_validate.validate.rules).string.email = true];
    string login = 3;
  }
  User user = 1;
}

message PutUserRequest {
  message User {
    int64 id = 1 [(proto.protoc_gen_validate.validate.rules).int64.gt = 0];
    string email = 2 [(proto.protoc_gen_validate.validate.rules).string.email = true];
    string login = 3;
    string password = 4;
  }
  User user = 1;
}

message PutUserResponse {
  bool result = 1;
}

message DeleteUserRequest {
  int64 user_id = 1 [(proto.protoc_gen_validate.validate.rules).int64.gt = 0];
}

message DeleteUserResponse {
  bool result = 1;
}
